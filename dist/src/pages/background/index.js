import{S as m}from"../../../assets/js/sync.js";import{A as c}from"../../../assets/js/webdav.js";const E=8081,g=`ws://localhost:${E}`,_="wait_update",h="do_update",A="done_update",u={Send:T,Receive:y};function T(e){return JSON.stringify(e)}function y(e){return JSON.parse(e)}let r=!1;function O({watchPath:e,onUpdate:s}){const n=new WebSocket(g);function t(){n.send(u.Send({type:A}))}return n.addEventListener("message",d=>{const o=u.Receive(String(d.data));switch(o.type){case h:{r&&(t(),r=!1,s());return}case _:{r=P({watchPath:e,updatedPath:o.path});return}}}),n}function P({watchPath:e,updatedPath:s}){return s.includes(e)}function R(e){O({watchPath:e,onUpdate:()=>{chrome.runtime.reload()}})}function L(e,s,n){chrome.notifications.create({type:"basic",iconUrl:n,title:e,message:s})}R("pages/background");chrome.runtime.onMessage.addListener((e,s,n)=>{let t=!1;return e.popupMounted&&console.log("eventPage notified that Popup.tsx has mounted."),t});let i=new m;function U(e,s,n){let{action:t,data:d,callbackId:o}=e;console.log("msgHandler -> req",e);function a(p,f=!1){const S={msg:`${t} response`,callbackId:o,data:p};f||n(S)}t===c.IMPORT_DATA?(l(),a("")):t===c.START_SYNC?(i.tryStartSync(),a("")):t===c.STOP_SYNC&&(i.stopSync(),a(""))}["onMessage","onMessageExternal"].forEach(e=>{chrome.runtime[e].addListener(U)});function C(){i.on("received",()=>{L("Data Sync","The latest data has been synced from the cloud",chrome.runtime.getURL("/img/success.png"))})}function l(){C()}l();
//# sourceMappingURL=index.js.map
